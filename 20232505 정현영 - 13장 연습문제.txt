13장 연습문제
20232505 정현영

1. 다음은 JSTL이 제공하는 5가지 분류에 대한 태그의 세부 영역과 태그에서 사용되는 접두어, 그리고 URI를 정리한 표이다. 다음에서 빈 부분을 완성하시오.
분류 - 세부 영역 - 접두어 (prefix) - URI
Core - 변수 지원 - c - http://java.sun.com/jsp/jstl/core 
Core - 제어 흐름 - c - http://java.sun.com/jsp/jstl/core 
Core - URI 관리 - c - http://java.sun.com/jsp/jstl/core 
Core - 출력, 예외처리 - c - http://java.sun.com/jsp/jstl/core 
XML - 코아 - x - http://java.sun.com/jsp/jstl/xml 
XML - 흐름 제어 - x - http://java.sun.com/jsp/jstl/xml 
XML - 변환 - x - http://java.sun.com/jsp/jstl/xml
Internationalization - 지역화(Locale) - fmt - http://java.sun.com/jsp/jstl/fmt
Internationalization - 메시지 포맷 - fmt - http://java.sun.com/jsp/jstl/fmt
Internationalization - 수와 날짜 포맷 - fmt - http://java.sun.com/jsp/jstl/fmt
Database - SQL - sql - http://java.sun.com/jsp/jstl/sql
Functions - 집합체 길이 - fn - http://java.sun.com/jsp/jstl/functions
Functions - 문자열 처리 - fn - http://java.sun.com/jsp/jstl/functions

2. 다음은 JSTL의 기능 분류에 따흔 taglib 지시자를 정리한 표이다. 다음에서 밑줄 부분을 완성하시오.
기능 분류 - taglib 지시자
Core - <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core " %>
XML processing - <%@ taglib prefix="x" uri="http://java.sun.com/jsp/jstl/xml " %>
Internationalization - <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt " %>
Database access (SQL) - <%@ taglib prefix="sql" uri="http://java.sun.com/jsp/jstl/sql " %>
Functions - <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions " %>

3. 코어 태그 라이브러리에서 제어흐름을 처리하는 태그와 그 기능을 설명하시오.
<c:if> - 조건문을 표현하며, 주어진 조건이 참일 때만 내용을 실행합니다.
<c:choose>, <c:when>, <c:otherwise> - 다중 조건을 처리할 때 사용합니다. <c:choose>는 전체 구조를 시작하고, <c:when>은 각 조건을 나타내며, <c:otherwise>는 어떤 조건도 충족하지 않을 때 실행됩니다.
<c:forEach> - 컬렉션의 각 항목에 대해 반복 작업을 수행합니다.
<c:forTokens> - 구분자(delimiter)로 분리된 토큰(token)에 대해 반복 작업을 수행합니다.

4. 다음은 코어 라이브러리 태그를 이용하는 간단한 부분 소스이다. 다음 각각의 문제에서 브라우저 출력 결과를 기술하시오
(1)
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:set var="str1" value="none" />
<c:set var="str2" value="page" scope="page" />
<c:set var="str3" value="request" scope="request" />
<c:set var="str4" value="session" scope="session" />
<c:set var="str5" value="application" scope="application" />

<c:remove var="str1" />
/${str1} = ${str1} <br>

<c:remove var="str2" />
/${str2} = ${str2} <br>

<c:remove var="str3" scope="request" />
/${str3} = ${str3} <br>

<c:remove var="str4" scope="application" />
/${str4} = ${str4} <br>

<c:remove var="str5" scope="session" />
/${str5} = ${str5} <br>

결과:
/none =
/ = 
/ =
/ = 
/ = 

(2)
<c:set var="point" value="86" />
<c:choose>
	<c:when test="${point >= 90 }" >
	  A
	</c:when>
	<c:when test="${point >= 80 }" >
	  B
	</c:when>
	<c:when test="${point >= 70 }" >
	  C
	</c:when>
	<c:when test="${point >= 60 }" >
	  D
	</c:when>
	<c:otherwise>
	  F
	</c:otherwise>
</c:choose>

결과:
B

(3)
<c:set var="tel" value="82-2-11-3487-8754"/>

<c:forTokens var="tel" delims="-" items="${tel}">
${tel}
</c:forTokens>

결과:
82
2
11
3487
8754

(4)
<c:out value="<hr>" escapeXml="true" />

결과:
&lt;hr&gt;

(5)
<c:out value="<hr>" escapeXml="true" />

결과:
&lt;hr&gt;

(6)
<c:set var="calendar" value="<%= new java.util.HashMap() %>" />
<c:set target="${calendar}" property="jan" value="1월" />
<c:set target="${calendar}" property="feb" value="2월" />
<c:set target="${calendar}" property="mar" value="3월" />
${calendar.feb}

결과:
2월

5. 다음은 함수 라이브러리를 이용하는 간단한 부분 소스이다. 다음 각각의 문제에서 브라우저 출력 결과를 기술하시오
(1)
<c:set var="str1" value="javascript" />
${fn:substring(str1, 4, -1)} <br>
${fn:substringBefore(str1, "as")} <br>
${fn:substringAfter(str1, "sc")} <br>

결과:
script 
jav
ript

(2)
<c:set var="str2" value="VBscript" />
${fn:trim("  신 지애  ")} <br>
${fn:replace(str2, "VB", "java")} <br>
${fn:index0F(str2, "B")} <br>

결과:
신 지애
JavaScript
2

(3)
<c:set var="str3" value="커스텀 태그" />
${fn:startsWith(str3, "커스")} <br>
${fn:endsWith(str3, "태그")} <br>
${fn:contains(str3, "스텀")} <p>

결과:
true
true
true

(4)
${fn:escapeXml("<p>")} <br>

결과:
&lt;p&gt;
